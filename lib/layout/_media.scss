@use 'sass:map';

$media-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 1170px,
  xl: 1440px,
) !default;

/// Applies styles to given media query
/// @param {string} $breakpoint [null] - one of breakpoint names declared in the media configuration
/// @param {boolean} $is-mobile-first [true]
/// @param {string} $width [null] - custom width can be used instead of breakpoint name
@mixin media($breakpoint: null, $is-mobile-first: true, $width: null) {
  @if not $width and not map.has-key($media-breakpoints, $breakpoint) {
    @error '[media]: #{$breakpoint} is not defined';
  }

  $breakpoint-width: if($width, $width, map.get($media-breakpoints, $breakpoint));
  @if ($breakpoint-width != 0) {
    $media: if($is-mobile-first, 'min-width: #{$breakpoint-width}', 'max-width: #{$breakpoint-width - 1}');

    @media (#{$media}) {
      @content;
    }
  } @else if ($is-mobile-first) {
    @content;
  }
}

/// Applies styles to screen resolutions equal or greater than given one
/// @param {string} $breakpoint [null] - one of breakpoint names declared in the media configuration
/// @param {string} $width [null] - custom width can be used instead of breakpoint name
/// @example scss
///  // Usage
///  .element-1 {
///    @include media-up(md) {
///      width: 50%;
///    }
///  }
///
///  .element-2 {
///    @include media-up($width: 1500px) {
///      width: 1000px;
///    }
///  }
///
///  // Output
///  @media (min-width: 768px) {
///    .element-1 {
///      width: 50%;
///    }
///  }
///
///  @media (min-width: 1500px) {
///    .element-2 {
///      width: 1000px;
///    }
///  }
@mixin media-up($breakpoint: null, $width: null) {
  @include media($breakpoint, true, $width) {
    @content;
  }
}

/// Applies styles to screen resolutions smaller than given one
/// @param {string} $breakpoint [null] - one of breakpoint names declared in the media configuration
/// @param {string} $width [null] - custom width can be used instead of breakpoint name
/// @example scss
///  // Usage
///  .element-1 {
///    @include media-down(md) {
///      width: 100%;
///    }
///  }
///
///  .element-2 {
///    @include media-down($width: 1500px) {
///      width: 500px;
///    }
///  }
///
///  // Output
///  @media (max-width: 767px) {
///    .element-1 {
///      width: 100%;
///    }
///  }
///
///  @media (max-width: 1499px) {
///    .element-2 {
///      width: 500px;
///    }
///  }
@mixin media-down($breakpoint: null, $width: null) {
  @include media($breakpoint, false, $width) {
    @content;
  }
}
